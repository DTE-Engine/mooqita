
INSTRUCTIONS
-------------
Write a script using /bin/bash that does the following:
1. Create a series of random numbers and strings of characters and write them to a file, no more than 15 characters for each line. As characters assume the Latin Alphabet, [A-Za-z], without special characters and the numbers 0,1,2,3,4,5,6,7,8,9. Example of a line with 15 characters: 123456789aBcDeF Explain the process how you create the lines in your file.
2. Control the size of the file. If the file reaches the size of 1 MiB interrupt the creation of more random lines. What is a good way to control the size of a file? Discuss what options you know and why you picked one of them. Come up with two ways in Linux to find the size of a file. 
3. Now sort the file. Select a sorting style. Which one did you use? Why? What is the most common command in Linux to sort a file and what happens when you use the default option, i.e. using no specific sorting option?
4. Remove all lines that start with an “a”, no matter if it is in uppercase or lowercase. Save the result into a new file. Use regular expressions to do this.
5. How many lines were removed?


EXPLANATIONS
-------------
1. The scripts starts by creating the initial originalFile. The file is populated with series of 15 character lines of random numbers and strings of characters from the Latin Alphabet [A-Za-z] and 0 to 9. They were generated by using the $RANDOM environment variable in the Linux kernel. A looping construct was utilized to populate the file line by line using the until loop which ends when the file reaches 1 megabyte. Cut is used for manipulating column-based files. 

2. Control of the file size was predetermined using du (disk usage) command that measures the disk space occupied by the file limiting it to 1 megabyte. Another way to find the size of a file in Linux such as comparisons of two files with ls -l.

3. The file was sorted using the sort command. The most commonly used command in Linux is Sort which rearranges lines of a text file alphabetically. The sort <filename> command sorts by the beginning characters of each line.

4. Regular expressions are text strings used for matching specific patterns like the start of a line. Grep searches text files for patterns and can be used with regular expressions for example, given one or more files it prints all lines that match a particular regular expression pattern. 

5. The Diff command compares two files line by line. Here it showed the difference between the two files with more than 6000 lines being removed.





